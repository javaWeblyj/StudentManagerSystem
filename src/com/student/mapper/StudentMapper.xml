<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.student.pojo.Student">
    <id column="stu_id" jdbcType="VARCHAR" property="stu_id" />
    <result column="c_id" jdbcType="INTEGER" property="c_id" />
    <result column="stu_name" jdbcType="VARCHAR" property="stu_name" />
    <result column="stu_age" jdbcType="INTEGER" property="stu_age" />
    <result column="stu_sex" jdbcType="VARCHAR" property="stu_sex" />
    <result column="stu_status" jdbcType="BIT" property="stu_status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.student.pojo.Student">
    <result column="stu_address" jdbcType="LONGVARCHAR" property="stu_address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, c_id, stu_name, stu_age, stu_sex, stu_address
  </sql>
  <sql id="Blob_Column_List">
    stu_status
  </sql>
  
    <!-- 统计班级个数 -->
        <select id="listCID" resultType="java.lang.Integer">
            select c_id from  student   
        </select>  
  
  <!-- 统计记录个数 -->
        <select id="list" resultType="com.student.pojo.Student">
            select * from   student  
            WHERE stu_status=1  
        </select>  
        
<!--         查询班级编号相同的所有学生 -->
	<select id="selectByCID" parameterType="java.lang.Integer" resultType="com.student.pojo.Student">
	
          select * from   student  
          WHERE c_id=#{c} 
     </select>  
  
  
  <select id="selectByExampleWithBLOBs" parameterType="com.student.pojo.StudentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByExample" parameterType="com.student.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultType="com.student.pojo.Student">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    update student
    set      
      stu_status = 0
    where stu_id = #{id}
  </delete>
  
  <insert id="insert" keyColumn="stu_id" keyProperty="stuId" parameterType="com.student.pojo.Student" useGeneratedKeys="true">
    insert into student (stu_id, c_id, stu_name, stu_age, 
      stu_sex, stu_address, stu_status
      )
    values (#{stu_id,jdbcType=INTEGER}, #{c_id,jdbcType=INTEGER}, #{stu_name,jdbcType=VARCHAR}, #{stu_age,jdbcType=INTEGER}, 
      #{stu_sex,jdbcType=VARCHAR}, #{stu_address,jdbcType=LONGVARCHAR},#{stu_status,jdbcType=INTEGER}
      )
  </insert>
  
  <insert id="insertSelective" keyColumn="stu_id" keyProperty="stuId" parameterType="com.student.pojo.Student" useGeneratedKeys="true">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuAge != null">
        stu_age,
      </if>
      <if test="stuSex != null">
        stu_sex,
      </if>
      <if test="stuStatus != null">
        stu_status,
      </if>
      <if test="stuAddress != null">
        stu_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuSex != null">
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuStatus != null">
        #{stuStatus,jdbcType=BIT},
      </if>
      <if test="stuAddress != null">
        #{stuAddress,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.student.pojo.Student">
    update student
    <set>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        stu_age = #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuSex != null">
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuStatus != null">
        stu_status = #{stuStatus,jdbcType=BIT},
      </if>
      <if test="stuAddress != null">
        stu_address = #{stuAddress,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  
  
  <!--   编辑更新 update -->
  <update id="updateDelete" parameterType="com.student.pojo.Student">
    update student
    set      
      stu_status = 0
    where stu_id = #{stu_id,jdbcType=VARCHAR}
  </update>
  
  
<!--   逻辑删除update -->
  <update id="update" parameterType="com.student.pojo.Student">
    update student
    set c_id = #{c_id,jdbcType=INTEGER},
      stu_name = #{stu_name,jdbcType=VARCHAR},
      stu_age = #{stu_age,jdbcType=INTEGER},
      stu_sex = #{stu_sex,jdbcType=VARCHAR},
      stu_address = #{stu_address,jdbcType=LONGVARCHAR}
    where stu_id = #{stu_id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.student.pojo.Student">
    update student
    set c_id = #{cId,jdbcType=INTEGER},
      stu_name = #{stuName,jdbcType=VARCHAR},
      stu_age = #{stuAge,jdbcType=INTEGER},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_status = #{stuStatus,jdbcType=BIT},
      stu_address = #{stuAddress,jdbcType=LONGVARCHAR}
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  
    <update id="updateByPrimaryKey" parameterType="com.student.pojo.Student">
    update student
    set c_id = #{c_id,jdbcType=INTEGER},
   	  stu_id = #{stu_id,jdbcType=INTEGER},
      stu_name = #{stu_name,jdbcType=VARCHAR},
      stu_age = #{stu_age,jdbcType=INTEGER},
      stu_sex = #{stu_sex,jdbcType=VARCHAR},
      stu_address = #{stu_address,jdbcType=LONGVARCHAR}
    where stu_id = #{stu_id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateById" parameterType="com.student.pojo.Student">
    update student
    set c_id = #{c_id,jdbcType=INTEGER},
      stu_name = #{stu_name,jdbcType=VARCHAR},
      stu_age = #{stu_age,jdbcType=INTEGER},
      stu_sex = #{stu_sex,jdbcType=VARCHAR},
      stu_address = #{stu_address,jdbcType=LONGVARCHAR}
    where stu_id = #{stu_id,jdbcType=VARCHAR}
  </update>
  
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.mapper.StuClassMapper">
  <resultMap id="BaseResultMap" type="com.student.pojo.StuClass">
    <id column="class_id" jdbcType="INTEGER" property="class_id" />
    <result column="class_name" jdbcType="VARCHAR" property="class_name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.student.pojo.StuClass">
    <result column="class_introduce" jdbcType="LONGVARCHAR" property="class_introduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    class_id, class_name
  </sql>
  <sql id="Blob_Column_List">
    class_introduce
  </sql>
<!-- 统计记录个数 -->
   <select id="list" resultType="com.student.pojo.StuClass">
       select * from   stu_class    
  </select>  
  
  <select id="selectByExampleWithBLOBs" parameterType="com.student.pojo.StuClassExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stu_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByExample" parameterType="com.student.pojo.StuClassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from stu_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.student.pojo.StuClass">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stu_class
    where class_id = #{class_id,jdbcType=INTEGER}
  </select>
  
<!--   自己有需要用到的，批量删除 -->
  <delete id="deleteById" parameterType="java.lang.String">
    delete from stu_class
    where class_id = #{id}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stu_class
    where class_id = #{class_id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" keyColumn="class_id" keyProperty="class_id" parameterType="com.student.pojo.StuClass" useGeneratedKeys="true">
    insert into stu_class (class_id, class_name, class_introduce)
    values (#{class_id,jdbcType=INTEGER}, #{class_name,jdbcType=VARCHAR}, #{class_introduce,jdbcType=LONGVARCHAR})
  </insert>
  
  
  <insert id="insertSelective" keyColumn="class_id" keyProperty="classId" parameterType="com.student.pojo.StuClass" useGeneratedKeys="true">
    insert into stu_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="className != null">
        class_name,
      </if>
      <if test="classIntroduce != null">
        class_introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classIntroduce != null">
        #{classIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.student.pojo.StuClass">
    update stu_class
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classIntroduce != null">
        class_introduce = #{classIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.student.pojo.StuClass">
    update stu_class
    set class_name = #{className,jdbcType=VARCHAR},
      class_introduce = #{classIntroduce,jdbcType=LONGVARCHAR}
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.student.pojo.StuClass">
    update stu_class
    set class_name = #{class_name,jdbcType=VARCHAR},
    class_introduce = #{class_introduce,jdbcType=VARCHAR}
    where class_id = #{class_id,jdbcType=INTEGER}
  </update>
  
</mapper>